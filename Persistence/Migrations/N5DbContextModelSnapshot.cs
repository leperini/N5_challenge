// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(N5DbContext))]
    partial class N5DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeForename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("PermissionTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermissionTypeId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 11, 30, 5, 13, 11, 815, DateTimeKind.Utc).AddTicks(2243),
                            Date = new DateTime(2023, 11, 30, 5, 13, 11, 815, DateTimeKind.Utc).AddTicks(2243),
                            EmployeeForename = "Adam",
                            EmployeeSurname = "Smith",
                            IsDeleted = 0,
                            LastUpdated = new DateTime(2023, 11, 30, 5, 13, 11, 815, DateTimeKind.Utc).AddTicks(2243),
                            PermissionTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 11, 30, 5, 13, 11, 815, DateTimeKind.Utc).AddTicks(2297),
                            Date = new DateTime(2023, 11, 30, 5, 13, 11, 815, DateTimeKind.Utc).AddTicks(2296),
                            EmployeeForename = "Barry",
                            EmployeeSurname = "Allen",
                            IsDeleted = 0,
                            LastUpdated = new DateTime(2023, 11, 30, 5, 13, 11, 815, DateTimeKind.Utc).AddTicks(2297),
                            PermissionTypeId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.PermissionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PermissionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 11, 30, 5, 13, 11, 815, DateTimeKind.Utc).AddTicks(2075),
                            Description = "Vacation permissions",
                            IsDeleted = 0,
                            LastUpdated = new DateTime(2023, 11, 30, 5, 13, 11, 815, DateTimeKind.Utc).AddTicks(2071)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 11, 30, 5, 13, 11, 815, DateTimeKind.Utc).AddTicks(2080),
                            Description = "Birth permissions",
                            IsDeleted = 0,
                            LastUpdated = new DateTime(2023, 11, 30, 5, 13, 11, 815, DateTimeKind.Utc).AddTicks(2080)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Permission", b =>
                {
                    b.HasOne("Domain.Entities.PermissionType", "PermissionType")
                        .WithMany("Permissions")
                        .HasForeignKey("PermissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PermissionType");
                });

            modelBuilder.Entity("Domain.Entities.PermissionType", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
